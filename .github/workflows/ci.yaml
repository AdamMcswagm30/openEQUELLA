name: openEQUELLA CI

on: [push]

jobs:
  build_and_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: NPM Cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: SBT Cache
        uses: actions/cache@v1
        with:
          path: ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
          restore-keys: |
            ${{ runner.os }}-sbt-

      - name: Set up NVM
        shell: bash -l {0}
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          echo "source $NVM_DIR/nvm.sh" >> "$HOME/.bash_profile"

      - name: Install NodeJS
        shell: bash -l {0}
        run: |
          nvm install

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Install node dependencies (core)
        shell: bash -l {0}
        run: |
          cd Source/Plugins/Core/com.equella.core/js && npm install-ci

      - name: Install node dependencies (root)
        shell: bash -l {0}
        run: |
          npm install-ci

      - name: Run checks
        shell: bash -l {0}
        run: |
          npm run check
          ./sbt headerCheck checkJavaCodeStyle

      - name: Build primary artefacts
        shell: bash -l {0}
        run: |
          ./sbt installerZip writeLanguagePack writeScriptingJavadoc

      - uses: actions/upload-artifact@v2-preview
        with:
          name: Installer
          path: Installer/target/equella-installer*.zip

      - uses: actions/upload-artifact@v2-preview
        with:
          name: Upgrader
          path: Source/Server/equellaserver/target/tle-upgrade*.zip

      - uses: actions/upload-artifact@v2-preview
        with:
          name: Other
          path: target/*.zip
